[build-system]
requires = [
  "setuptools",
  "wheel",
]

[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"

[tool.ruff]
target-version = "py38"
line-length = 120
# Exclude a variety of commonly ignored directories.
exclude = [
  "docs",
]

lint.select = [
  "D",      # see: https://pypi.org/project/pydocstyle
  "E",
  "F",      # see: https://pypi.org/project/pyflakes
  "I",      # isort
  "N",      # see: https://pypi.org/project/pep8-naming
  "RUF018", # see: https://docs.astral.sh/ruff/rules/assignment-in-assert
  "S",      # see: https://pypi.org/project/flake8-bandit
  "UP",     # see: https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "W",      # see: https://pypi.org/project/pycodestyle
]
lint.extend-select = [
  "ANN", # see: https://pypi.org/project/flake8-annotations
  "C4",  # see: https://pypi.org/project/flake8-comprehensions
  "PT",  # see: https://pypi.org/project/flake8-pytest-style
  "RET", # see: https://pypi.org/project/flake8-return
  "SIM", # see: https://pypi.org/project/flake8-simplify
  "YTT", # see: https://pypi.org/project/flake8-2020
]
lint.per-file-ignores."setup.py" = [
  "ANN202",
  "ANN401",
]
lint.per-file-ignores."src/**" = [
  "ANN401",
]
lint.per-file-ignores."tests/**" = [
  "ANN101",
  "ANN401",
  "D100",
  "D101",
  "D103",
  "D107",
  "PT031",  # todo: `pytest.warns()` block should contain a single simple statement
  "S101",
]
lint.unfixable = [
  "F401",
]
# Unlike Flake8, default to a complexity level of 10.
lint.mccabe.max-complexity = 10
# Use Google-style docstrings.
lint.pydocstyle.convention = "google"
lint.ignore-init-module-imports = true

[tool.codespell]
#skip = '*.py'
quiet-level = 3
# comma separated list of words; waiting for:
#  https://github.com/codespell-project/codespell/issues/2839#issuecomment-1731601603
# also adding links until they ignored by its: nature
#  https://github.com/codespell-project/codespell/issues/2243#issuecomment-1732019960
#ignore-words-list = ""

[tool.docformatter]
recursive = true
# this need to be shorter as some docstings are r"""...
wrap-summaries = 119
wrap-descriptions = 120
blank = true

[tool.check-manifest]
ignore = [
  "*.yml",
  ".github",
  ".github/*",
]

[tool.pytest.ini_options]
norecursedirs = [
  ".git",
  ".github",
  "dist",
  "build",
  "docs",
]
addopts = [
  "--strict-markers",
  "--doctest-modules",
  "--color=yes",
  "--disable-pytest-warnings",
]
#filterwarnings = ["error::FutureWarning"]
xfail_strict = true
junit_duration_report = "call"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "pass",
]
[tool.coverage.run]
parallel = true
relative_files = true

[tool.mypy]
files = [
  "deprecate",
]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
show_error_codes = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"
warn_unused_ignores = "True"
allow_redefinition = "True"
warn_no_return = "False"
